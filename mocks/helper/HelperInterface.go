// Code generated by mockery v2.14.1. DO NOT EDIT.

package helper

import mock "github.com/stretchr/testify/mock"

// HelperInterface is an autogenerated mock type for the HelperInterface type
type HelperInterface struct {
	mock.Mock
}

// EncryptMessage provides a mock function with given fields: keySize, textData, privateKeyPassword
func (_m *HelperInterface) EncryptMessage(keySize uint64, textData string, privateKeyPassword string) ([]byte, string, error) {
	ret := _m.Called(keySize, textData, privateKeyPassword)

	var r0 []byte
	if rf, ok := ret.Get(0).(func(uint64, string, string) []byte); ok {
		r0 = rf(keySize, textData, privateKeyPassword)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]byte)
		}
	}

	var r1 string
	if rf, ok := ret.Get(1).(func(uint64, string, string) string); ok {
		r1 = rf(keySize, textData, privateKeyPassword)
	} else {
		r1 = ret.Get(1).(string)
	}

	var r2 error
	if rf, ok := ret.Get(2).(func(uint64, string, string) error); ok {
		r2 = rf(keySize, textData, privateKeyPassword)
	} else {
		r2 = ret.Error(2)
	}

	return r0, r1, r2
}

// GenerateUuid provides a mock function with given fields:
func (_m *HelperInterface) GenerateUuid() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

type mockConstructorTestingTNewHelperInterface interface {
	mock.TestingT
	Cleanup(func())
}

// NewHelperInterface creates a new instance of HelperInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewHelperInterface(t mockConstructorTestingTNewHelperInterface) *HelperInterface {
	mock := &HelperInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
